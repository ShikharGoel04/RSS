[{"E:\\RSS\\rss\\src\\components\\MainComponent.js":"1","E:\\RSS\\rss\\src\\components\\HeaderComponent.js":"2"},{"size":1546,"mtime":1610470251828,"results":"3","hashOfConfig":"4"},{"size":2996,"mtime":1610470823009,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"19e03xw",{"filePath":"8","messages":"9","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"E:\\RSS\\rss\\src\\components\\MainComponent.js",["11"],"E:\\RSS\\rss\\src\\components\\HeaderComponent.js",["12","13","14"],"import React,{Component}from 'react';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport 'bootstrap-social/bootstrap-social.css';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n  Button, Modal, ModalHeader, ModalBody,\r\n  Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nclass Header extends Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n        isModalOpen: false\r\n    }\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n}\r\ntoggleModal() {\r\n  this.setState({\r\n    isModalOpen: !this.state.isModalOpen\r\n  });\r\n}\r\n\r\n\r\nhandleLogin(event) {\r\n  event.preventDefault();\r\n  alert(this.phone.value);\r\n  \r\n  const phone=this.phone.value;\r\n  \r\n  this.props.sendOTP(phone);\r\n \r\n  \r\n}\r\n \r\n\r\n    render(){\r\n            return(\r\n              \r\n              <>\r\n                 <div className=\"jumbotron text-center\">\r\n              <img src=\"https://www.organiser.org//Encyc/2019/2/7/organiser-logo.png\"></img>\r\n            </div>\r\n                  <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                <ModalBody>\r\n                   \r\n                <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"phone\">Phone Number</Label>\r\n                                <Input type=\"text\" id=\"phone\" name=\"phone\"\r\n                                    innerRef={(input) => this.phone = input} />\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Send OTP</Button>\r\n                        </Form>\r\n                </ModalBody>\r\n            </Modal>\r\n            \r\n               <Navbar dark expand=\"md\">\r\n                             <NavbarToggler onClick={this.toggleNav}/>\r\n            <NavbarBrand href=\"\">RSS</NavbarBrand>\r\n          <Nav Navbar>\r\n          <NavItem><NavLink className=\"nav-link\" to=\"/home\"><span className=\"fa fa-home fa-lg\"></span>Home</NavLink></NavItem>\r\n          <NavItem><NavLink className=\"nav-link\" to=\"/videos\"><span className=\"fa fa-video-camera fa-lg\"></span>Videos</NavLink></NavItem>\r\n          <NavItem><NavLink className=\"nav-link\" to=\"/magazines\"><span className=\"fa fa-info fa-lg\"></span>Magazines</NavLink></NavItem>\r\n          <NavItem><NavLink className=\"nav-link\" to=\"/subscriptions\"><span className=\"fa fa-info fa-lg\"></span>Subscriptions</NavLink></NavItem>\r\n          <NavItem>\r\n          \r\n                           <Nav className=\"ml-auto navbar\"><Button onClick={this.toggleModal} outline><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button></Nav>\r\n                                \r\n          </NavItem>\r\n          </Nav>\r\n         \r\n      </Navbar>\r\n      \r\n</>\r\n\r\n            );\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Header;",{"ruleId":"15","severity":1,"message":"16","line":23,"column":5,"nodeType":"17","messageId":"18","endLine":25,"endColumn":6},{"ruleId":"19","severity":1,"message":"20","line":4,"column":51,"nodeType":"21","messageId":"22","endLine":4,"endColumn":59},{"ruleId":"19","severity":1,"message":"23","line":4,"column":70,"nodeType":"21","messageId":"22","endLine":4,"endColumn":79},{"ruleId":"24","severity":1,"message":"25","line":43,"column":15,"nodeType":"26","endLine":43,"endColumn":87},"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'Collapse' is defined but never used.","Identifier","unusedVar","'Jumbotron' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]